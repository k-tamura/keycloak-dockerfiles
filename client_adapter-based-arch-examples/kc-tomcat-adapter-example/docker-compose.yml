#
# Docker Compose 設定ファイル
# - Keycloak & Client Adapter (TOMCAT) example -
#
version: '3'

# ボリューム設定(データ永続化)
volumes:

  # MySQL用ボリューム設定
  mysql_data:
      driver: local

# 各コンテナサービス設定
services:

  # LBコンテナ設定
  lb:
    container_name: kc-example-lb
    build:
      context: ./lb
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    depends_on:
      - op
      - app1
      - app2
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      default:
        aliases:
          - sso.example.com
          - uma.example.com
          - authz.example.com
    environment:
      TZ: "Asia/Tokyo"

  # DB(MySQL)コンテナ設定
  db:
    container_name: kc-example-db
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    build:
      context: ./mysql
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloakdb
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
      TZ: "Asia/Tokyo"
    networks:
      - default

  # OP(Keycloak)コンテナ設定
  op:
    container_name: kc-example-op
    build:
      context: ./keycloak
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    depends_on:
      - db
    ports:
      - 8080:8080
    environment:
      VIRTUAL_HOST: "sso.example.com"
      VIRTUAL_PORT: "8080"
      CERT_NAME: example
      DB_VENDOR: MYSQL
      DB_ADDR: db
      DB_DATABASE: keycloakdb
      DB_USER: keycloak
      DB_PASSWORD: password
      JDBC_PARAMS: "useSSL=false&useUnicode=true&characterEncoding=UTF-8"
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: password
      PROXY_ADDRESS_FORWARDING: "true"
      TZ: "Asia/Tokyo"
    networks:
      - default

  # App1コンテナ設定
  app1:
    container_name: kc-example-app1
    build:
      context: ./tomcat1
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    depends_on:
      - op
    ports:
      - 8081:8080
    environment:
      VIRTUAL_HOST: "authz.example.com"
      VIRTUAL_PORT: "8081"
      CERT_NAME: example
      TZ: "Asia/Tokyo"
    networks:
      - default
    command: bash /wait-for-kc.sh

  # App2コンテナ設定
  app2:
    container_name: kc-example-app2
    build:
      context: ./tomcat2
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    depends_on:
      - op
    ports:
      - 8082:8080
    environment:
      VIRTUAL_HOST: "uma.example.com"
      VIRTUAL_PORT: "8082"
      CERT_NAME: example
      TZ: "Asia/Tokyo"
    networks:
      - default
    command: bash /wait-for-kc.sh
